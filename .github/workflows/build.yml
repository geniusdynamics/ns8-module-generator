name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags, e.g., v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] # Add more OS if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23" # Change to your Go version
          check-latest: true

      - name: Build
        shell: pwsh
        run: |
          if ($env:RUNNER_OS -eq "Windows") {
            $env:GOOS = "windows"
            $env:GOARCH = "amd64"
            go build -o ns8-module-generator.exe 
          } else {
            $env:GOOS = "linux"
            $env:GOARCH = "amd64"
            go build -o ns8-module-generator
          }
      - name: Archive the binaries
        run: |
          mkdir -p release
          if($env:RUNNER_OS -eq "Windows"){
            mv ns8-module-generator.exe release/
          } else {
            mv ns8-module-generator.exe release/
          }

      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: release/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag: ${{ github.ref }}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
