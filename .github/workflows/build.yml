
name: Build and Release

on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags, e.g., v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            GOOS: linux
            GOARCH: amd64
            EXT: ""
          - os: windows-latest
            GOOS: windows
            GOARCH: amd64
            EXT: .exe
          - os: macos-latest
            GOOS: darwin
            GOARCH: amd64
            EXT: ""
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          check-latest: true

      - name: Build
        shell: pwsh
        run: |
        if ($env:RUNNER_OS -eq "Windows") {
          $env:GOOS = "windows"
          $env:GOARCH = "amd64"
          go build -o ns8-module-generator.exe
        } else {
          export GOOS=linux
          export GOARCH=amd64
          go build -o ns8-module-generator
        }

      - name: Archive the binaries
        run: |
          mkdir -p release
          mv ns8-module-generator${{ matrix.EXT }} release/

      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}-${{ github.run_id }}
          path: release/

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries-${{ matrix.os }}-${{ github.run_id }}
          path: release/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

