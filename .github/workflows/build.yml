name: Build and Release
on:
  push:
    tags:
      - "v*.*.*" # Triggers on version tags, e.g., v1.0.0

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            GOOS: linux
            GOARCH: amd64
            EXT: ""
            BINARY_NAME: ns8-module-generator-linux-amd64
          - os: windows-latest
            GOOS: windows
            GOARCH: amd64
            EXT: .exe
            BINARY_NAME: ns8-module-generator-windows-amd64.exe
          - os: macos-latest
            GOOS: darwin
            GOARCH: amd64
            EXT: ""
            BINARY_NAME: ns8-module-generator-darwin-amd64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
          check-latest: true

      - name: Build
        run: |
          GOOS=${{ matrix.GOOS }} GOARCH=${{ matrix.GOARCH }} go build -o ${{ matrix.BINARY_NAME }}
        shell: bash

      - name: Archive the binaries
        run: |
          mkdir -p release
          mv ${{ matrix.BINARY_NAME }} release/

      - name: Upload Release Assets
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}
          path: release/*
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Artifacts (Linux)
        uses: actions/download-artifact@v4
        with:
          name: binaries-ubuntu-latest
          path: release/

      - name: Download Artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          name: binaries-windows-latest
          path: release/

      - name: Download Artifacts (MacOS)
        uses: actions/download-artifact@v4
        with:
          name: binaries-macos-latest
          path: release/

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: release/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
